{% extends "layouts/app.twig" %}

{% block title %}Régions d'escalade en Suisse - TopoclimbCH{% endblock %}

{% block meta %}
    <meta name="description" content="Découvrez toutes les régions d'escalade de Suisse : Valais, Jura, Grisons...">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <!-- CSS commun -->
    <link rel="stylesheet" href="/css/common.css">
{% endblock %}

{% block content %}
<div class="regions-page">
    <!-- En-tête simple -->
    <div class="page-header">
        <div class="container">
            <h1 class="page-title">
                <i class="fas fa-mountain"></i>
                Régions d'escalade
            </h1>
            <p class="page-subtitle">
                Découvrez les plus beaux sites d'escalade de Suisse
            </p>
            
            <!-- Statistiques simples -->
            <div class="page-stats">
                <span class="stat">
                    <strong>{{ regions|length }}</strong> Régions
                </span>
                <span class="stat">
                    <strong>0</strong> Secteurs
                </span>
                <span class="stat">
                    <strong>0</strong> Voies
                </span>
            </div>
        </div>
    </div>

    <!-- Contenu principal -->
    <div class="container">
        <!-- Filtres simplifiés -->
        <div class="filters-section">
            <h2 class="filters-title">Filtrer les régions</h2>
            
            <div class="filters-row">
                <!-- Recherche -->
                <div class="filter-group">
                    <label for="region-search" class="filter-label">
                        <i class="fas fa-search"></i>
                        Rechercher
                    </label>
                    <input 
                        type="text" 
                        id="region-search" 
                        class="filter-input"
                        placeholder="Nom de région..."
                    >
                </div>
                
                <!-- Pays -->
                <div class="filter-group">
                    <label for="country-filter" class="filter-label">
                        <i class="fas fa-flag"></i>
                        Pays
                    </label>
                    <select id="country-filter" class="filter-select">
                        <option value="">Tous les pays</option>
                        {% for country in countries %}
                            <option value="{{ country.id }}">{{ country.name }}</option>
                        {% endfor %}
                    </select>
                </div>
                
                <!-- Actions -->
                <div class="filter-actions">
                    <button type="button" class="btn-clear-filters">
                        <i class="fas fa-times"></i>
                        Effacer les filtres
                    </button>
                </div>
            </div>
        </div>

        <!-- Liste des régions -->
        <div class="regions-grid" id="regions-grid">
            {% if regions is defined and regions|length > 0 %}
                {% for region in regions %}
                    <div class="region-card" data-region-id="{{ region.id }}">
                        <div class="region-card-header">
                            <h3 class="region-name">{{ region.name }}</h3>
                            <span class="region-country">{{ region.country_name }}</span>
                        </div>
                        
                        <div class="region-card-body">
                            {% if region.description %}
                                <p class="region-description">{{ region.description }}</p>
                            {% endif %}
                            
                            <div class="region-meta">
                                {% if region.altitude %}
                                    <span class="region-altitude">
                                        <i class="fas fa-mountain"></i>
                                        {{ region.altitude }}m
                                    </span>
                                {% endif %}
                            </div>
                        </div>
                        
                        <div class="region-card-actions">
                            <a href="/regions/{{ region.id }}" class="btn-primary">
                                <i class="fas fa-eye"></i>
                                Voir la région
                            </a>
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <div class="no-results">
                    <i class="fas fa-search"></i>
                    <h3>Aucune région trouvée</h3>
                    <p>Aucune région ne correspond à vos critères de recherche.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>

<style>
/* Styles pour la page régions simplifiée */
.regions-page {
    min-height: 100vh;
    background: var(--bg-color, #f8f9fa);
}

.page-header {
    background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
    color: white;
    padding: 2rem 0;
    margin-bottom: 2rem;
}

.page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
    gap: 1rem;
}

.page-subtitle {
    font-size: 1.2rem;
    opacity: 0.9;
    margin-bottom: 1.5rem;
}

.page-stats {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
}

.stat {
    font-size: 1rem;
    opacity: 0.8;
}

.filters-section {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.filters-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--text-primary, #2c3e50);
}

.filters-row {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    align-items: end;
}

.filter-group {
    display: flex;
    flex-direction: column;
    min-width: 200px;
    flex: 1;
}

.filter-label {
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--text-secondary, #6c757d);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
}

.filter-input, .filter-select {
    padding: 0.75rem 1rem;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.filter-input:focus, .filter-select:focus {
    outline: none;
    border-color: var(--primary-color, #007bff);
    box-shadow: 0 0 0 3px rgba(0,123,255,0.1);
}

.btn-clear-filters {
    background: #dc3545;
    color: white;
    border: none;
    padding: 0.75rem 1rem;
    border-radius: 8px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.btn-clear-filters:hover {
    background: #c82333;
    transform: translateY(-1px);
}

.regions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
}

.region-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.region-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.region-card-header {
    padding: 1.5rem 1.5rem 1rem;
    border-bottom: 1px solid #f8f9fa;
}

.region-name {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--text-primary, #2c3e50);
}

.region-country {
    background: var(--primary-color, #007bff);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 500;
}

.region-card-body {
    padding: 1rem 1.5rem;
}

.region-description {
    color: var(--text-secondary, #6c757d);
    line-height: 1.6;
    margin-bottom: 1rem;
}

.region-meta {
    display: flex;
    gap: 1rem;
    font-size: 0.9rem;
    color: var(--text-secondary, #6c757d);
}

.region-altitude {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.region-card-actions {
    padding: 1rem 1.5rem;
    background: #f8f9fa;
}

.btn-primary {
    background: var(--primary-color, #007bff);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background: #0056b3;
    transform: translateY(-1px);
    text-decoration: none;
    color: white;
}

.no-results {
    grid-column: 1 / -1;
    text-align: center;
    padding: 3rem 1rem;
    color: var(--text-secondary, #6c757d);
}

.no-results i {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

.no-results h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
}

@media (max-width: 768px) {
    .filters-row {
        flex-direction: column;
    }
    
    .filter-group {
        min-width: 100%;
    }
    
    .page-stats {
        justify-content: center;
    }
    
    .regions-grid {
        grid-template-columns: 1fr;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('region-search');
    const countryFilter = document.getElementById('country-filter');
    const clearButton = document.querySelector('.btn-clear-filters');
    const regionsGrid = document.getElementById('regions-grid');
    
    function filterRegions() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedCountry = countryFilter.value;
        const regionCards = regionsGrid.querySelectorAll('.region-card');
        
        let visibleCount = 0;
        
        regionCards.forEach(card => {
            const regionName = card.querySelector('.region-name').textContent.toLowerCase();
            const regionDescription = card.querySelector('.region-description')?.textContent.toLowerCase() || '';
            
            const matchesSearch = !searchTerm || 
                regionName.includes(searchTerm) || 
                regionDescription.includes(searchTerm);
            
            const matchesCountry = !selectedCountry || 
                card.dataset.countryId === selectedCountry;
            
            if (matchesSearch && matchesCountry) {
                card.style.display = 'block';
                visibleCount++;
            } else {
                card.style.display = 'none';
            }
        });
        
        // Afficher/masquer le message "aucun résultat"
        const noResults = regionsGrid.querySelector('.no-results');
        if (noResults) {
            noResults.style.display = visibleCount === 0 ? 'block' : 'none';
        }
    }
    
    // Événements de filtrage
    searchInput.addEventListener('input', filterRegions);
    countryFilter.addEventListener('change', filterRegions);
    
    // Effacer les filtres
    clearButton.addEventListener('click', function() {
        searchInput.value = '';
        countryFilter.value = '';
        filterRegions();
    });
});
</script>
{% endblock %}