{% extends 'base.twig' %}

{% block title %}{{ page_title }} - TopoclimbCH{% endblock %}

{% block extra_css %}
<style>
.monitoring-card {
    background: white;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.health-status {
    padding: 8px 16px;
    border-radius: 20px;
    color: white;
    font-weight: bold;
    text-align: center;
    margin-bottom: 20px;
}

.health-status.healthy {
    background: #28a745;
}

.health-status.warning {
    background: #ffc107;
}

.health-status.unhealthy {
    background: #dc3545;
}

.metric-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
}

.metric-card {
    background: #f8f9fa;
    padding: 15px;
    border-radius: 6px;
    border-left: 4px solid #007bff;
}

.metric-value {
    font-size: 24px;
    font-weight: bold;
    color: #333;
}

.metric-label {
    font-size: 14px;
    color: #666;
    margin-top: 5px;
}

.chart-container {
    height: 300px;
    background: #f8f9fa;
    border-radius: 6px;
    padding: 20px;
    margin-bottom: 20px;
}

.health-checks {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
}

.health-check-item {
    background: #f8f9fa;
    padding: 15px;
    border-radius: 6px;
    border-left: 4px solid #28a745;
}

.health-check-item.warning {
    border-left-color: #ffc107;
}

.health-check-item.unhealthy {
    border-left-color: #dc3545;
}

.error-list {
    max-height: 400px;
    overflow-y: auto;
    background: #fff;
    border: 1px solid #dee2e6;
    border-radius: 4px;
}

.error-item {
    padding: 10px;
    border-bottom: 1px solid #dee2e6;
}

.error-item:last-child {
    border-bottom: none;
}

.error-level {
    padding: 2px 8px;
    border-radius: 3px;
    font-size: 12px;
    font-weight: bold;
    color: white;
    margin-right: 10px;
}

.error-level.critical {
    background: #dc3545;
}

.error-level.error {
    background: #fd7e14;
}

.error-level.warning {
    background: #ffc107;
}

.error-level.info {
    background: #17a2b8;
}

.backup-status {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 10px;
}

.backup-status .badge {
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: bold;
}

.backup-status .badge.success {
    background: #28a745;
    color: white;
}

.backup-status .badge.error {
    background: #dc3545;
    color: white;
}

.action-buttons {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
}

.btn {
    padding: 8px 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    text-decoration: none;
    display: inline-block;
}

.btn-primary {
    background: #007bff;
    color: white;
}

.btn-warning {
    background: #ffc107;
    color: #212529;
}

.btn-danger {
    background: #dc3545;
    color: white;
}

.btn-success {
    background: #28a745;
    color: white;
}

.btn:hover {
    opacity: 0.9;
}

.auto-refresh {
    margin-bottom: 20px;
    padding: 10px;
    background: #e9ecef;
    border-radius: 4px;
}

.auto-refresh label {
    font-weight: bold;
    margin-right: 10px;
}

.system-info {
    background: #f8f9fa;
    padding: 15px;
    border-radius: 6px;
    margin-bottom: 20px;
}

.system-info h4 {
    margin-top: 0;
    margin-bottom: 10px;
}

.system-info dl {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 5px;
    margin: 0;
}

.system-info dt {
    font-weight: bold;
}

.system-info dd {
    margin: 0;
}

.progress-bar {
    background: #e9ecef;
    border-radius: 4px;
    height: 20px;
    overflow: hidden;
    margin-bottom: 10px;
}

.progress-bar-fill {
    height: 100%;
    background: #28a745;
    transition: width 0.3s ease;
}

.progress-bar-fill.warning {
    background: #ffc107;
}

.progress-bar-fill.danger {
    background: #dc3545;
}

.responsive-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
}

.responsive-table th,
.responsive-table td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #dee2e6;
}

.responsive-table th {
    background: #f8f9fa;
    font-weight: bold;
}

.responsive-table tr:hover {
    background: #f8f9fa;
}

@media (max-width: 768px) {
    .metric-grid {
        grid-template-columns: 1fr;
    }
    
    .health-checks {
        grid-template-columns: 1fr;
    }
    
    .action-buttons {
        flex-direction: column;
    }
    
    .system-info dl {
        grid-template-columns: 1fr;
    }
}
</style>
{% endblock %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1>{{ page_title }}</h1>
            
            <!-- Auto-refresh controls -->
            <div class="auto-refresh">
                <label for="auto-refresh-toggle">Auto-refresh:</label>
                <input type="checkbox" id="auto-refresh-toggle" checked>
                <span id="refresh-countdown">Prochaine mise à jour dans: 30s</span>
            </div>
            
            <!-- Action buttons -->
            <div class="action-buttons">
                <button class="btn btn-primary" onclick="manualRefresh()">Actualiser maintenant</button>
                <button class="btn btn-warning" onclick="cleanupLogs()">Nettoyer les logs</button>
                <button class="btn btn-success" onclick="createBackup()">Créer un backup</button>
                <a href="/admin/monitoring/backups" class="btn btn-primary">Gestion des backups</a>
            </div>
            
            <!-- System Health Status -->
            <div class="monitoring-card">
                <h3>État de santé du système</h3>
                <div class="health-status {{ health_check.overall_status }}">
                    {{ health_check.overall_status|upper }}
                </div>
                
                <div class="health-checks">
                    {% for check_name, check_data in health_check.checks %}
                    <div class="health-check-item {{ check_data.status }}">
                        <h5>{{ check_name|title }}</h5>
                        <p><strong>Statut:</strong> {{ check_data.status|upper }}</p>
                        <p><strong>Message:</strong> {{ check_data.message }}</p>
                        {% if check_data.response_time_ms is defined %}
                        <p><strong>Temps de réponse:</strong> {{ check_data.response_time_ms|round(2) }}ms</p>
                        {% endif %}
                        {% if check_data.usage_percent is defined %}
                        <div class="progress-bar">
                            <div class="progress-bar-fill {% if check_data.usage_percent > 80 %}danger{% elseif check_data.usage_percent > 60 %}warning{% endif %}" 
                                 style="width: {{ check_data.usage_percent }}%"></div>
                        </div>
                        <p><strong>Utilisation:</strong> {{ check_data.usage_percent|round(1) }}%</p>
                        {% endif %}
                    </div>
                    {% endfor %}
                </div>
            </div>
            
            <!-- System Performance Metrics -->
            <div class="monitoring-card">
                <h3>Métriques de performance</h3>
                <div class="metric-grid">
                    <div class="metric-card">
                        <div class="metric-value">{{ system_performance.cpu_usage|round(2) }}%</div>
                        <div class="metric-label">Utilisation CPU</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{{ system_performance.memory_usage|round(2) }}%</div>
                        <div class="metric-label">Utilisation mémoire</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{{ system_performance.disk_usage|round(2) }}%</div>
                        <div class="metric-label">Utilisation disque</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{{ system_performance.active_users }}</div>
                        <div class="metric-label">Utilisateurs actifs</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{{ system_performance.error_rate|round(2) }}%</div>
                        <div class="metric-label">Taux d'erreur</div>
                    </div>
                    <div class="metric-card">
                        <div class="metric-value">{{ system_performance.response_times.avg_response_time|round(2) }}ms</div>
                        <div class="metric-label">Temps de réponse moyen</div>
                    </div>
                </div>
            </div>
            
            <!-- Usage Metrics -->
            <div class="monitoring-card">
                <h3>Métriques d'utilisation ({{ usage_metrics.period_hours }}h)</h3>
                
                <div class="row">
                    <div class="col-md-6">
                        <h4>Actions populaires</h4>
                        <table class="responsive-table">
                            <thead>
                                <tr>
                                    <th>Action</th>
                                    <th>Utilisations</th>
                                    <th>Utilisateurs uniques</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for action in usage_metrics.actions %}
                                <tr>
                                    <td>{{ action.action }}</td>
                                    <td>{{ action.action_count }}</td>
                                    <td>{{ action.unique_users }}</td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="col-md-6">
                        <h4>Temps de réponse</h4>
                        <div class="metric-grid">
                            <div class="metric-card">
                                <div class="metric-value">{{ usage_metrics.response_times.avg_response_time|round(2) }}ms</div>
                                <div class="metric-label">Moyenne</div>
                            </div>
                            <div class="metric-card">
                                <div class="metric-value">{{ usage_metrics.response_times.max_response_time|round(2) }}ms</div>
                                <div class="metric-label">Maximum</div>
                            </div>
                            <div class="metric-card">
                                <div class="metric-value">{{ usage_metrics.response_times.min_response_time|round(2) }}ms</div>
                                <div class="metric-label">Minimum</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Error Statistics -->
            <div class="monitoring-card">
                <h3>Statistiques d'erreurs ({{ error_stats.period_hours }}h)</h3>
                
                <div class="row">
                    <div class="col-md-6">
                        <h4>Erreurs par niveau</h4>
                        <table class="responsive-table">
                            <thead>
                                <tr>
                                    <th>Niveau</th>
                                    <th>Nombre</th>
                                    <th>Jours avec erreurs</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for error in error_stats.errors_by_level %}
                                <tr>
                                    <td>
                                        <span class="error-level {{ error.level }}">{{ error.level|upper }}</span>
                                    </td>
                                    <td>{{ error.count }}</td>
                                    <td>{{ error.days_with_errors }}</td>
                                </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="col-md-6">
                        <h4>Erreurs les plus fréquentes</h4>
                        <div class="error-list">
                            {% for error in error_stats.top_errors %}
                            <div class="error-item">
                                <strong>{{ error.count }}x</strong> {{ error.message }}
                                <br>
                                <small>Dernière occurrence: {{ error.last_occurrence|date('d/m/Y H:i') }}</small>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Backup Status -->
            <div class="monitoring-card">
                <h3>État des backups</h3>
                <div class="backup-status">
                    <span>Dernier backup:</span>
                    <span class="badge success">{{ backup_stats.last_backup|date('d/m/Y H:i') }}</span>
                </div>
                <div class="backup-status">
                    <span>Backups réussis:</span>
                    <span class="badge success">{{ backup_stats.successful_backups }}</span>
                </div>
                <div class="backup-status">
                    <span>Backups échoués:</span>
                    <span class="badge error">{{ backup_stats.failed_backups }}</span>
                </div>
                <div class="backup-status">
                    <span>Durée moyenne:</span>
                    <span>{{ backup_stats.avg_duration|round(2) }}s</span>
                </div>
                <div class="backup-status">
                    <span>Taille totale:</span>
                    <span>{{ (backup_stats.total_size / 1024 / 1024)|round(2) }}MB</span>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let autoRefreshEnabled = true;
let refreshCountdown = 30;
let refreshInterval;

function startAutoRefresh() {
    refreshInterval = setInterval(() => {
        if (autoRefreshEnabled) {
            refreshCountdown--;
            document.getElementById('refresh-countdown').textContent = 
                `Prochaine mise à jour dans: ${refreshCountdown}s`;
            
            if (refreshCountdown <= 0) {
                location.reload();
            }
        }
    }, 1000);
}

function manualRefresh() {
    location.reload();
}

function cleanupLogs() {
    if (confirm('Êtes-vous sûr de vouloir nettoyer les anciens logs?')) {
        fetch('/admin/monitoring/api/cleanup-logs', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Logs nettoyés avec succès');
            } else {
                alert('Erreur lors du nettoyage des logs');
            }
        })
        .catch(error => {
            alert('Erreur: ' + error.message);
        });
    }
}

function createBackup() {
    if (confirm('Créer un backup complet du système?')) {
        const btn = event.target;
        btn.disabled = true;
        btn.textContent = 'Création en cours...';
        
        fetch('/admin/monitoring/api/backup/full', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            btn.disabled = false;
            btn.textContent = 'Créer un backup';
            
            if (data.status === 'success') {
                alert('Backup créé avec succès: ' + data.backup_name);
            } else {
                alert('Erreur lors de la création du backup: ' + data.error);
            }
        })
        .catch(error => {
            btn.disabled = false;
            btn.textContent = 'Créer un backup';
            alert('Erreur: ' + error.message);
        });
    }
}

// Initialize auto-refresh
document.addEventListener('DOMContentLoaded', function() {
    const refreshToggle = document.getElementById('auto-refresh-toggle');
    
    refreshToggle.addEventListener('change', function() {
        autoRefreshEnabled = this.checked;
        if (autoRefreshEnabled) {
            refreshCountdown = 30;
        }
    });
    
    startAutoRefresh();
});
</script>
{% endblock %}