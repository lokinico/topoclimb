{% extends "layouts/app.twig" %}

{% block title %}Carte Interactive - Sites d'Escalade Suisse{% endblock %}

{% block meta %}
    <meta name="description" content="Découvrez tous les sites d'escalade de Suisse sur notre carte interactive moderne avec les tuiles officielles suisses.">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" 
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" 
          crossorigin="" />
    
    <!-- CSS moderne pour la carte -->
    <link rel="stylesheet" href="/css/pages/map.css">
{% endblock %}

{% block content %}
<div class="modern-map-page">
    <!-- Header moderne -->
    <div class="map-hero">
        <div class="container">
            <h1 class="hero-title">
                <i class="fas fa-mountain"></i>
                Carte Interactive des Sites d'Escalade
            </h1>
            <p class="hero-subtitle">
                Explorez les plus beaux sites d'escalade de Suisse avec les tuiles officielles swisstopo
            </p>
            
            <!-- Stats compactes -->
            <div class="hero-stats">
                <div class="stat">
                    <span class="number">{{ stats.total_sites ?? 0 }}</span>
                    <span class="label">Sites</span>
                </div>
                <div class="stat">
                    <span class="number">{{ stats.total_routes ?? 0 }}</span>
                    <span class="label">Voies</span>
                </div>
                <div class="stat">
                    <span class="number">{{ stats.total_regions ?? 8 }}</span>
                    <span class="label">Régions</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Interface carte moderne -->
    <div class="map-wrapper">
        <!-- Panneau de contrôles moderne -->
        <div class="map-controls-panel">
            <!-- Recherche rapide -->
            <div class="search-box">
                <input type="text" id="search-input" placeholder="Rechercher un site..." autocomplete="off">
                <button id="search-btn" class="search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </div>

            <!-- Filtres compacts -->
            <div class="filters-compact">
                <select id="region-filter" class="modern-select">
                    <option value="">Toutes les régions</option>
                    {% for region in regions %}
                        <option value="{{ region.id }}">{{ region.name }}</option>
                    {% endfor %}
                </select>
                
                <select id="type-filter" class="modern-select">
                    <option value="">Tous types</option>
                    <option value="sport">Sport</option>
                    <option value="trad">Trad</option>
                    <option value="mixed">Mixte</option>
                    <option value="boulder">Bloc</option>
                </select>
                
                <button id="my-location" class="location-btn" title="Ma position">
                    <i class="fas fa-crosshairs"></i>
                </button>
            </div>

            <!-- Légende moderne -->
            <div class="legend-modern">
                <div class="legend-item">
                    <div class="marker-dot sport"></div>
                    <span>Sport</span>
                </div>
                <div class="legend-item">
                    <div class="marker-dot trad"></div>
                    <span>Trad</span>
                </div>
                <div class="legend-item">
                    <div class="marker-dot mixed"></div>
                    <span>Mixte</span>
                </div>
                <div class="legend-item">
                    <div class="marker-dot boulder"></div>
                    <span>Bloc</span>
                </div>
            </div>
        </div>

        <!-- Carte principale -->
        <div class="map-container-modern">
            <div id="swiss-climbing-map"></div>
            
            <!-- Boutons d'action flottants -->
            <div class="floating-controls">
                <button id="fullscreen-btn" class="control-btn" title="Plein écran">
                    <i class="fas fa-expand"></i>
                </button>
                <button id="center-ch-btn" class="control-btn" title="Centrer sur la Suisse">
                    <i class="fas fa-home"></i>
                </button>
                <button id="layers-btn" class="control-btn" title="Changer de fond">
                    <i class="fas fa-layer-group"></i>
                </button>
            </div>

            <!-- Indicateur de chargement moderne -->
            <div id="loading-indicator" class="loading-modern">
                <div class="loading-spinner"></div>
                <span>Chargement des sites...</span>
            </div>
        </div>
    </div>
</div>

<!-- Popup moderne pour les détails -->
<div id="site-modal" class="site-modal">
    <div class="modal-content-modern">
        <div class="modal-header-modern">
            <h3 id="modal-title"></h3>
            <button id="modal-close" class="close-btn">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="modal-body-modern" id="modal-body">
            <!-- Contenu chargé dynamiquement -->
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" 
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" 
        crossorigin=""></script>

<script>
// Configuration moderne pour la Suisse
const SwissMapConfig = {
    center: [46.8182, 8.2275], // Centre de la Suisse
    zoom: 8,
    maxZoom: 18,
    minZoom: 6,
    bounds: [[45.818, 5.956], [47.808, 10.492]] // Limites de la Suisse
};

// Sites d'escalade (données du serveur)
const climbingSites = {{ sites|json_encode|raw }};

// Variables globales
let map;
let markersLayer;
let currentLayer = 'swisstopo';

// Initialisation de la carte moderne
document.addEventListener('DOMContentLoaded', function() {
    initializeSwissMap();
    initializeControls();
    hideLoading();
});

function initializeSwissMap() {
    // Créer la carte
    map = L.map('swiss-climbing-map', {
        center: SwissMapConfig.center,
        zoom: SwissMapConfig.zoom,
        maxZoom: SwissMapConfig.maxZoom,
        minZoom: SwissMapConfig.minZoom,
        maxBounds: SwissMapConfig.bounds,
        maxBoundsViscosity: 1.0,
        zoomControl: false
    });

    // Ajouter les contrôles de zoom en bas à droite
    L.control.zoom({
        position: 'bottomright'
    }).addTo(map);

    // Ajouter les tuiles suisses officielles (swisstopo)
    addSwissTiles();

    // Ajouter les marqueurs des sites
    addClimbingSiteMarkers();

    console.log('Carte suisse initialisée avec', climbingSites.length, 'sites');
}

function addSwissTiles() {
    // Tuiles swisstopo officielles (gratuites)
    const swisstopoLayer = L.tileLayer('https://wmts.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg', {
        attribution: '&copy; <a href="https://www.swisstopo.admin.ch/">swisstopo</a>',
        bounds: SwissMapConfig.bounds,
        maxNativeZoom: 18
    });

    // Couche de secours OpenStreetMap
    const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    });

    // Couche satellite suisse
    const satelliteLayer = L.tileLayer('https://wmts.geo.admin.ch/1.0.0/ch.swisstopo.swissimage/default/current/3857/{z}/{x}/{y}.jpeg', {
        attribution: '&copy; <a href="https://www.swisstopo.admin.ch/">swisstopo</a>',
        bounds: SwissMapConfig.bounds
    });

    // Ajouter la couche par défaut
    swisstopoLayer.addTo(map);

    // Stocker les couches pour le basculement
    window.mapLayers = {
        swisstopo: swisstopoLayer,
        satellite: satelliteLayer,
        osm: osmLayer
    };
}

function addClimbingSiteMarkers() {
    markersLayer = L.layerGroup().addTo(map);
    
    climbingSites.forEach(site => {
        if (site.latitude && site.longitude) {
            // Créer un marqueur moderne
            const marker = createModernMarker(site);
            marker.addTo(markersLayer);
        }
    });
}

function createModernMarker(site) {
    // Déterminer le type principal du site
    const siteType = determineSiteType(site);
    
    // Créer l'icône moderne
    const icon = L.divIcon({
        className: 'modern-marker',
        html: `<div class="marker-modern ${siteType}">
                 <i class="fas fa-mountain"></i>
               </div>`,
        iconSize: [30, 30],
        iconAnchor: [15, 15],
        popupAnchor: [0, -15]
    });

    // Créer le marqueur
    const marker = L.marker([site.latitude, site.longitude], { icon: icon });

    // Contenu de la popup moderne
    const popupContent = `
        <div class="popup-modern">
            <h4>${site.name}</h4>
            <div class="popup-info">
                <div class="info-item">
                    <i class="fas fa-map-marker-alt"></i>
                    <span>${site.region_name || 'Région non spécifiée'}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-route"></i>
                    <span>${site.route_count || 0} voies</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-layer-group"></i>
                    <span>${site.sector_count || 0} secteurs</span>
                </div>
            </div>
            <div class="popup-actions">
                <button onclick="showSiteDetails(${site.id})" class="btn-modern primary">
                    <i class="fas fa-eye"></i> Voir détails
                </button>
                <button onclick="getDirections(${site.latitude}, ${site.longitude})" class="btn-modern secondary">
                    <i class="fas fa-directions"></i> Itinéraire
                </button>
            </div>
        </div>
    `;

    marker.bindPopup(popupContent, {
        maxWidth: 300,
        className: 'leaflet-popup-modern'
    });

    return marker;
}

function determineSiteType(site) {
    // Logique simple pour déterminer le type principal
    // TODO: Améliorer avec les vraies données des voies
    return 'sport'; // Par défaut
}

function initializeControls() {
    // Recherche
    const searchInput = document.getElementById('search-input');
    const searchBtn = document.getElementById('search-btn');
    
    searchBtn.addEventListener('click', () => performSearch(searchInput.value));
    searchInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') performSearch(searchInput.value);
    });

    // Filtres
    document.getElementById('region-filter').addEventListener('change', applyFilters);
    document.getElementById('type-filter').addEventListener('change', applyFilters);

    // Boutons d'action
    document.getElementById('my-location').addEventListener('click', locateUser);
    document.getElementById('fullscreen-btn').addEventListener('click', toggleFullscreen);
    document.getElementById('center-ch-btn').addEventListener('click', () => {
        map.setView(SwissMapConfig.center, SwissMapConfig.zoom);
    });
    document.getElementById('layers-btn').addEventListener('click', switchMapLayer);

    // Modal
    document.getElementById('modal-close').addEventListener('click', closeModal);
    document.getElementById('site-modal').addEventListener('click', (e) => {
        if (e.target.id === 'site-modal') closeModal();
    });
}

function performSearch(query) {
    if (!query.trim()) return;
    
    // Recherche simple dans les sites
    const results = climbingSites.filter(site => 
        site.name.toLowerCase().includes(query.toLowerCase()) ||
        (site.region_name && site.region_name.toLowerCase().includes(query.toLowerCase()))
    );

    if (results.length > 0) {
        // Centrer sur le premier résultat
        const site = results[0];
        map.setView([site.latitude, site.longitude], 12);
        
        // Ouvrir la popup
        markersLayer.eachLayer(layer => {
            if (layer.getLatLng().lat === site.latitude && layer.getLatLng().lng === site.longitude) {
                layer.openPopup();
            }
        });
    } else {
        alert('Aucun site trouvé pour: ' + query);
    }
}

function applyFilters() {
    const regionFilter = document.getElementById('region-filter').value;
    const typeFilter = document.getElementById('type-filter').value;
    
    // Filtrer les marqueurs
    markersLayer.clearLayers();
    
    const filteredSites = climbingSites.filter(site => {
        let passRegion = !regionFilter || site.region_id == regionFilter;
        let passType = !typeFilter || determineSiteType(site) === typeFilter;
        return passRegion && passType;
    });
    
    // Ajouter les marqueurs filtrés
    filteredSites.forEach(site => {
        if (site.latitude && site.longitude) {
            const marker = createModernMarker(site);
            marker.addTo(markersLayer);
        }
    });
}

function locateUser() {
    if (!navigator.geolocation) {
        alert("Géolocalisation non disponible");
        return;
    }

    navigator.geolocation.getCurrentPosition(
        position => {
            const lat = position.coords.latitude;
            const lng = position.coords.longitude;
            
            map.setView([lat, lng], 12);
            
            // Ajouter un marqueur temporaire
            const userIcon = L.divIcon({
                className: 'user-location-marker',
                html: '<div class="user-marker"><i class="fas fa-user"></i></div>',
                iconSize: [20, 20],
                iconAnchor: [10, 10]
            });
            
            const userMarker = L.marker([lat, lng], { icon: userIcon })
                .bindPopup('Votre position')
                .addTo(map)
                .openPopup();

            // Supprimer après 10 secondes
            setTimeout(() => map.removeLayer(userMarker), 10000);
        },
        error => {
            alert("Impossible d'obtenir votre position");
        }
    );
}

function switchMapLayer() {
    // Basculer entre les couches
    const layers = window.mapLayers;
    
    // Supprimer la couche actuelle
    map.removeLayer(layers[currentLayer]);
    
    // Passer à la suivante
    if (currentLayer === 'swisstopo') {
        currentLayer = 'satellite';
    } else if (currentLayer === 'satellite') {
        currentLayer = 'osm';
    } else {
        currentLayer = 'swisstopo';
    }
    
    // Ajouter la nouvelle couche
    layers[currentLayer].addTo(map);
}

function toggleFullscreen() {
    if (!document.fullscreenElement) {
        document.querySelector('.map-wrapper').requestFullscreen();
    } else {
        document.exitFullscreen();
    }
}

function showSiteDetails(siteId) {
    const site = climbingSites.find(s => s.id == siteId);
    if (!site) return;

    // Contenu du modal
    document.getElementById('modal-title').textContent = site.name;
    document.getElementById('modal-body').innerHTML = `
        <div class="site-details">
            <div class="detail-section">
                <h4><i class="fas fa-info-circle"></i> Informations générales</h4>
                <p><strong>Région:</strong> ${site.region_name}</p>
                <p><strong>Altitude:</strong> ${site.altitude || 'Non spécifiée'} m</p>
                <p><strong>Secteurs:</strong> ${site.sector_count || 0}</p>
                <p><strong>Voies:</strong> ${site.route_count || 0}</p>
            </div>
            
            <div class="detail-section">
                <h4><i class="fas fa-route"></i> Accès</h4>
                <p>${site.access_info || 'Informations d\'accès non disponibles'}</p>
            </div>
            
            <div class="detail-actions">
                <a href="/sites/${site.id}" class="btn-modern primary">
                    <i class="fas fa-external-link-alt"></i> Page complète
                </a>
                <button onclick="getDirections(${site.latitude}, ${site.longitude})" class="btn-modern secondary">
                    <i class="fas fa-directions"></i> Itinéraire GPS
                </button>
            </div>
        </div>
    `;
    
    document.getElementById('site-modal').style.display = 'flex';
}

function closeModal() {
    document.getElementById('site-modal').style.display = 'none';
}

function getDirections(lat, lng) {
    // Ouvrir Google Maps avec l'itinéraire
    const url = `https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`;
    window.open(url, '_blank');
}

function hideLoading() {
    document.getElementById('loading-indicator').style.display = 'none';
}

// Améliorer la responsivité
window.addEventListener('resize', () => {
    if (map) {
        setTimeout(() => map.invalidateSize(), 100);
    }
});
</script>
{% endblock %}