{% extends "layouts/app.twig" %}

{% block title %}Carte Interactive - Sites d'Escalade Suisse{% endblock %}

{% block meta %}
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" 
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" 
          crossorigin="" />
    
    <style>
    /* CSS ULTRA-SIMPLE POUR DÉBUGGER */
    body { margin: 0; padding: 0; }
    .simple-map-container { 
        width: 100%; 
        height: 100vh; 
        position: relative; 
    }
    #climbing-map { 
        width: 100%; 
        height: 100%; 
    }
    .simple-header {
        position: absolute;
        top: 10px;
        left: 10px;
        background: white;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        z-index: 1000;
    }
    .debug-info {
        position: absolute;
        bottom: 10px;
        left: 10px;
        background: white;
        padding: 10px;
        border-radius: 5px;
        font-size: 12px;
        z-index: 1000;
    }
    </style>
{% endblock %}

{% block content %}
<!-- VERSION ULTRA-SIMPLE POUR DÉBUGGER -->
<div class="simple-map-container">
    <!-- Header minimaliste -->
    <div class="simple-header">
        <h3><i class="fas fa-mountain"></i> Carte Escalade Suisse</h3>
        <small>Sites: {{ stats.total_sites ?? 'N/A' }} | Debug Mode</small>
    </div>
    
    <!-- Carte -->
    <div id="climbing-map"></div>
    
    <!-- Debug info -->
    <div class="debug-info">
        <div>Sites chargés: <span id="sites-count">0</span></div>
        <div>Status: <span id="status">Chargement...</span></div>
    </div>
</div>

<!-- 
ANCIENNE VERSION COMPLEXE EN COMMENTAIRE - À RÉACTIVER PROGRESSIVEMENT
<div class="map-app">
    <header class="map-header">
        <div class="header-brand">
            <i class="fas fa-mountain"></i>
            <h1>Escalade Suisse</h1>
        </div>
        <div class="header-stats">
            <span class="stat">{{ stats.total_sites ?? 8 }} sites</span>
            <span class="stat">{{ stats.total_routes ?? 935 }} voies</span>
        </div>
    </header>
    <main class="map-container">
        <div id="climbing-map"></div>
        <div class="map-controls">
            <div class="control-group">
                <button id="search-btn" class="control-btn"><i class="fas fa-search"></i></button>
                <button id="locate-btn" class="control-btn"><i class="fas fa-location-arrow"></i></button>
                <button id="layers-btn" class="control-btn"><i class="fas fa-layer-group"></i></button>
            </div>
            <div class="control-group">
                <button id="zoom-in" class="control-btn"><i class="fas fa-plus"></i></button>
                <button id="zoom-out" class="control-btn"><i class="fas fa-minus"></i></button>
            </div>
        </div>
    </main>
</div>
-->
{% endblock %}

{% block scripts %}
<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" 
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" 
        crossorigin=""></script>

<script>
console.log('🚀 DÉMARRAGE DEBUG MAP');

// === ÉTAPE 1: VARIABLES ULTRA-SIMPLES ===
let map = null;
const sites = {{ sites|json_encode|raw }};

document.addEventListener('DOMContentLoaded', function() {
    console.log('📍 DOM Chargé, sites reçus:', sites);
    document.getElementById('sites-count').textContent = sites ? sites.length : 0;
    
    // === ÉTAPE 2: CRÉER CARTE BASIQUE ===
    try {
        console.log('🗺️ Initialisation carte...');
        document.getElementById('status').textContent = 'Création carte...';
        
        map = L.map('climbing-map', {
            center: [46.8182, 8.2275], // Centre Suisse
            zoom: 8
        });
        
        console.log('✅ Carte créée');
        document.getElementById('status').textContent = 'Ajout des tuiles...';
        
        // === ÉTAPE 3: TUILES SWISS TOPO SIMPLES ===
        const swissTopo = L.tileLayer('https://wmts.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg', {
            attribution: '© swisstopo'
        });
        swissTopo.addTo(map);
        
        console.log('✅ Tuiles Swiss ajoutées');
        document.getElementById('status').textContent = 'Ajout des marqueurs...';
        
        // === ÉTAPE 4: MARQUEURS ULTRA-SIMPLES ===
        if (sites && sites.length > 0) {
            sites.forEach((site, index) => {
                console.log(`📌 Site ${index + 1}:`, site);
                
                // Vérifier les coordonnées (peut-être coordinates_lat/lng au lieu de lat/lng)
                const lat = site.latitude || site.coordinates_lat;
                const lng = site.longitude || site.coordinates_lng;
                
                if (lat && lng) {
                    const marker = L.marker([lat, lng]).addTo(map);
                    marker.bindPopup(`<b>${site.name}</b><br/>${site.description || ''}`);
                    console.log(`✅ Marqueur ajouté pour ${site.name} à [${lat}, ${lng}]`);
                } else {
                    console.log(`❌ Pas de coordonnées pour ${site.name}`);
                }
            });
            document.getElementById('status').textContent = `✅ ${sites.length} sites chargés`;
        } else {
            console.log('❌ Aucun site trouvé');
            document.getElementById('status').textContent = 'Aucun site trouvé';
        }
        
    } catch (error) {
        console.error('💥 ERREUR:', error);
        document.getElementById('status').textContent = `ERREUR: ${error.message}`;
    }
});

/*
ANCIENNE VERSION COMPLEXE EN COMMENTAIRE - À RÉACTIVER FONCTION PAR FONCTION

const SwissConfig = {
    center: [46.8182, 8.2275],
    zoom: 8,
    minZoom: 6,
    maxZoom: 18,
    bounds: [[45.8, 5.9], [47.9, 10.5]]
};

let sitesLayer = null;
let currentLayer = 'swisstopo';
let userMarker = null;

function addMapLayers() {
    const openStreetMap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap',
        maxZoom: 18
    });
    const satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
        attribution: '© Esri',
        maxZoom: 18
    });
    window.mapLayers = {
        swisstopo: swissTopo,
        osm: openStreetMap,
        satellite: satellite
    };
}

function loadSites() {
    sitesLayer = L.layerGroup().addTo(map);
    sites.forEach(site => {
        if (site.latitude && site.longitude) {
            addSiteMarker(site);
        }
    });
}

function addSiteMarker(site) {
    const marker = L.circleMarker([site.latitude, site.longitude], {
        radius: 8,
        fillColor: getSiteColor(site),
        color: '#ffffff',
        weight: 2,
        opacity: 1,
        fillOpacity: 0.8
    });
    const popupContent = createSitePopup(site);
    marker.bindPopup(popupContent, { maxWidth: 280, className: 'modern-popup' });
    marker.on('click', () => showSiteDetails(site));
    sitesLayer.addLayer(marker);
}

function getSiteColor(site) {
    const colors = {
        1: '#ef4444', // Valais - Rouge
        2: '#10b981', // Jura - Vert
        3: '#3b82f6', // Grisons - Bleu
        4: '#f59e0b', // Tessin - Orange
        5: '#8b5cf6', // Vaud - Violet
        6: '#06b6d4'  // Berne - Cyan
    };
    return colors[site.region_id] || '#6b7280';
}

PLUS DE FONCTIONS À RÉACTIVER AU FUR ET À MESURE...
*/
</script>
{% endblock %}